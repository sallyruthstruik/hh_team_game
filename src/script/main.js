// Generated by CoffeeScript 1.8.0
(function() {
  var HOST;

  HOST = "http://localhost:1234";

  this.MainChart = (function() {
    function MainChart() {
      var ctx;
      this.countCooperate = 0;
      this.countSwear = 0;
      this.countGoodV = 0;
      this.countWithMemory = 0;
      this.countEpochs = 1000;
      ctx = $("#myChart").get(0).getContext("2d");
      this.chart = new Chart(ctx);
    }

    MainChart.prototype.getChartData = function(data) {
      var _i, _ref, _results;
      return {
        labels: (function() {
          _results = [];
          for (var _i = 1, _ref = data.length; 1 <= _ref ? _i <= _ref : _i >= _ref; 1 <= _ref ? _i++ : _i--){ _results.push(_i); }
          return _results;
        }).apply(this),
        datasets: [
          {
            label: "My First dataset",
            fillColor: "rgba(220,220,220,0.2)",
            strokeColor: "rgba(220,220,220,1)",
            pointColor: "rgba(220,220,220,1)",
            pointStrokeColor: "#fff",
            pointHighlightFill: "#fff",
            pointHighlightStroke: "rgba(220,220,220,1)",
            data: data
          }
        ]
      };
    };

    MainChart.prototype.render = function() {
      var data, _this;
      _this = this;
      data = JSON.stringify({
        "cooperate": $("#countCooperate").val() - 0,
        "swear": $("#countSwear").val() - 0,
        "random": $("#countRandom").val() - 0,
        "probability": $("#probability").val() - 0,
        "goodv": $("#countGoodV").val() - 0,
        "withmemory": 0,
        "epochs": $("#countGames").val() - 0
      });
      console.log(data);
      return $.ajax({
        method: "POST",
        url: "" + HOST + "/api/do_game",
        data: data,
        contentType: 'application/json',
        success: function(data) {
          return _this.chart.Line(_this.getChartData(data.summary));
        },
        error: function(err) {
          return alert("Server fails");
        }
      });
    };

    return MainChart;

  })();

}).call(this);
